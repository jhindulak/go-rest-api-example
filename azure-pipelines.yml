trigger:
  - master

pr:
  - master

variables:
  imageName: 'jasonhindulak/go-rest-api-example'

jobs:
  - job: CI
    pool:
      vmImage: 'Ubuntu 16.04'
    steps:
      - script: |
          go get -u github.com/golangci/golangci-lint/cmd/golangci-lint
          ~/go/bin/golangci-lint run ./...
        displayName: Lint
      - script: |
          go get -u github.com/jstemmer/go-junit-report
          go test ./... -v -cover 2>&1 | ~/go/bin/go-junit-report -set-exit-code > report.xml
        displayName: Unit Tests
      - task: PublishTestResults@2
        inputs:
          testRunner: JUnit
          testResultsFiles: $(System.DefaultWorkingDirectory)/**/report.xml
        condition: always()
        continueOnError: true
      - script: |
          mkdir dist
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o dist/go-rest-api -v main.go
        displayName: Build
      - script: docker build -t $(imageName):$(build.buildId) -t $(imageName):latest .
        displayName: Docker Build
      - script: |
          docker login -u $(dockerId) -p $(dockerPassword)
          docker push $(imageName):$(build.buildId)
          docker push $(imageName):latest
        displayName: Docker Push
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
